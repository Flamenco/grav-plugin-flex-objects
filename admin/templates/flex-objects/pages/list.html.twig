{% extends 'partials/base.html.twig' %}
{% use 'flex-objects/pages/titlebar/list.html.twig' %}

{% set route = grav.route.withExtension('') %}

{# Allowed actions #}
{% set can_export = can_export ?? directory.config('admin.export') %}
{% set can_create = can_create ?? directory.isAuthorized('create') %}
{% set can_translate = can_translate ?? (admin.multilang and directory.object.hasFlexFeature('flex-translate')) %}

{# These variables can be overridden from the main template file #}
{% set back_route = back_route ?? ('/' ~ route.getRoute(1, -1)) %}
{% set title_icon = title_icon ?? directory.config.admin.menu.list.icon ?? 'fa-file-text-o' %}
{% set title = title ?? directory.title %}

{% set schema = directory.blueprint.schema %}

{% do assets.addJs('plugin://flex-objects/js/flex-objects.js', { 'group': 'bottom', 'loading': 'defer' }) %}

{% block body %}
    {% set collection = directory ? collection.isAuthorized('list') %}
    {% set directory_config = directory.config('admin.list.options')|default(config.get('plugins.flex-objects.admin_list', { per_page: 15, order: { by: 'updated_timestamp', dir: 'desc' }})) %}
    {% set table = directory ? flex.dataTable(collection.flexDirectory(), {  collection: collection, limit: directory_config.per_page, sort: directory_config.order.by ~ '|' ~ directory_config.order.dir }) %}
    {% set back_url = admin_route(back_route) ?: (base_url ~ back_route) %}

    {% set fields = table.getColumns() %}
    {% set fields_count = fields ? count(fields) : 0 %}
    {% set fields_width = 8 %}
    {% set fields_set = 0 %}
    {% set title_field = directory.config('admin.list.title') %}
    {% for key,options in fields %}
        {% set fields_width = fields_width + options.width ?: 0 %}
        {% set fields_set = fields_set + (options.width ? 1 : 0) %}
        {% if not title_field and options.link == 'edit' %}
            {% set title_field = key %}
        {% endif %}
    {% endfor %}

    {{ parent() }}
{% endblock body %}

{% block content_top %}
{% if directory %}
    <div class="alert notice">{{ "PLUGIN_ADMIN.SAVE_LOCATION"|tu }}: <b>{{ url(directory.storageFolder())|trim('/') }}</b></div>
{% endif %}
{% endblock %}

{% block content %}
{% if directory %}
<div id="directory">
    {% block list %}

        {% if not fields %}
            <div class="no-entries">
                <p>Blueprint for '{{ target }}' does not define displayed fields or list page override.</p>
                <ul>
                    <li>
                        Please add list of fields to blueprints file.
                    </li>
                    <li>
                        Please create template file for the type in <strong>flex-objects/types/{{ target }}/list.html.twig</strong>
                    </li>
                </ul>
            </div>
            {% elseif not collection.count %}
            <div class="no-entries">
                {% if directory.isAuthorized('create') %}
                    There are currently no entries, click the <a href="{{ base_url ~ flex.adminRoute(collection, {action: 'add'}) }}">Add</a> button to create a new one...
                {% else %}
                    There are currently no entries.
                {% endif %}
            </div>
        {% else %}
            {% set per_page = directory_config.per_page %}

            {% set tableFields = [] %}
            {% set searchFields = [] %}
            {% for key, options in fields %}
                {% set name = key %}
                {% set sortField = options.sort.field ?? key %}
                {% set title = (options.field.label ?? schema.get(options.alias ?? key).label)|tu %}
                {% set width = options.width ?: ((100-fields_width) / ((fields_count-fields_set) ?: 1))|round(3) %}
                {% set title_class = options.title_class ?: '' %}
                {% set data_class = options.data_class ?: '' %}

                {# Vuetable doesn't like field names with `.` in them, so we convert name and sortField to `_` #}
                {% set tableFields = tableFields|merge([
                    {
                        name: name|replace({'.': '_'}),
                        sortField: sortField,
                        title: title,
                        width: width ~ '%',
                        titleClass: title_class,
                        dataClass: data_class
                    }
                ]) %}

                {# FIXME: Search fields should be passed and individually customizable, right now defaulting to all fields selected #}
                {% set searchFields = searchFields|merge([key|replace({'.': '_'})]) %}
            {% endfor %}
            {% set tableFields = tableFields|merge([{ name: '_actions_', title: 'Actions', titleClass: 'right' }]) %}


            {% set list = table.jsonSerialize %}

            <div
                id="flex-objects-list"
                data-initial-store="{{
                    {
                        data: list,
                        api: grav.uri.currentRoute().withExtension('json').uri()|string,
                        perPage: per_page,
                        fields: tableFields,
                        searchFields: searchFields,
                        sortOrder: [{ field: directory_config.order.by, direction: directory_config.order.dir }],
                        searchPlaceholder: "PLUGIN_ADMIN.RESOURCE_FILTER"|tu,
                        paginationInfo: "PLUGIN_FLEX_OBJECTS.LIST_INFO"|tu,
                        emptyResult: "PLUGIN_FLEX_OBJECTS.EMPTY_RESULT"|tu
                    }|json_encode|e('html_attr')
                }}">
                <svg viewBox="0 0 1060 {{ 31 * (min(per_page, list.data|count) + 2) }}">
                {% for i in 0..((min(per_page, list.data|count) + 3) - 1) %}
                    <rect clip-path="url(#clip-path-{{ i }})" x="0" y="0" width="1060" height="{{ 31 * per_page }}" style="fill: url(#linear-gradient-{{ i }})"></rect>
                    <defs>
                        <clipPath id="clip-path-{{ i }}">
                            <rect x="13" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 200 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="533" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 63 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="653" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 78 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="755" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 117 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="938" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 83 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>

                            <rect x="0" y="{{ 31 * i }}" rx="6" ry="6" width="1060" height=".3"></rect>
                        </clipPath>
                        <linearGradient id="linear-gradient-{{ i }}">
                            <stop offset="-0.60016" stop-color="#d9d9d9" stop-opacity="1">
                                <animate attributeName="offset" values="-3; 1" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                            <stop offset="0.39984" stop-color="#ecebeb" stop-opacity="1">
                                <animate attributeName="offset" values="-2; 2" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                            <stop offset="1.39984" stop-color="#d9d9d9" stop-opacity="1">
                                <animate attributeName="offset" values="-1; 3" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                        </linearGradient>
                    </defs>
                {% endfor %}
                </svg></div>
        {% endif %}

        {% include 'flex-objects/pages/modals/remove.html.twig' with { name: target } %}

    {% endblock %}
</div>
{% else %}
    {% do page.modifyHeader('http_response_code', 404) %}
    <div class="error-block">
        <h1>Error 404</h1>
        <div class="padding">
            <p>
                Woops! Looks like this page doesn't exist.
            </p>
        </div>
    </div>
{% endif %}
{% endblock %}
