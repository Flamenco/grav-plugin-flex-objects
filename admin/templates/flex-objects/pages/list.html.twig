{% extends 'partials/base.html.twig' %}
{% use 'flex-objects/pages/titlebar/list.html.twig' %}

{% do assets.addJs('plugin://flex-objects/js/flex-objects.js', { 'group': 'bottom', 'loading': 'defer' }) %}

{% set collection = directory.collection.authorize('list') %}
{% set table = flex.dataTable(collection.type(false)) %}

{% block content_top %}
{% if directory %}
    <div class="alert notice">{{ "PLUGIN_ADMIN.SAVE_LOCATION"|tu }}: <b>{{ url(directory.storageFolder())|trim('/') }}</b></div>
{% endif %}
{% endblock %}

{% block content %}
{% if directory %}
<div id="directory">
    {% block list %}

        {% if not fields %}
            <div class="no-entries">
                <p>Blueprint for '{{ target }}' does not define displayed fields or list page override.</p>
                <ul>
                    <li>
                        Please add list of fields to blueprints file.
                    </li>
                    <li>
                        Please create template file for the type in <strong>flex-objects/types/{{ target }}/list.html.twig</strong>
                    </li>
                </ul>
            </div>
            {% elseif not collection.count %}
            <div class="no-entries">
                {% if directory.authorize('create') %}
                    There are currently no entries, click the <a href="{{ base_url ~ flex.adminRoute(collection, {action: 'add'}) }}">Add</a> button to create a new one...
                {% else %}
                    There are currently no entries.
                {% endif %}
            </div>
        {% else %}
            {% set perPage = 15 %}

            {% set tableFields = [] %}
            {% set searchFields = [] %}
            {% for key, options in fields %}
                {% set name = key %}
                {% set sortField = options.sort.field ?? key %}
                {% set title = (options.field.label ?? schema.get(options.alias ?? key).label)|tu %}
                {% set width = options.width ?: ((100-fields_width) / ((fields_count-fields_set) ?: 1))|round(3) %}

                {# Vuetable doesn't like field names with `.` in them, so we convert name and sortField to `_` #}
                {% set tableFields = tableFields|merge([
                    {
                        name: name|replace('.', '__'),
                        sortField: sortField,
                        title: title,
                        width: width ~ '%'
                    }
                ]) %}

                {# FIXME: Search fields should be passed and individually customizable, right now defaulting to all fields selected #}
                {% set searchFields = searchFields|merge([key|replace('.', '__')]) %}
            {% endfor %}
            {% set tableFields = tableFields|merge([{ name: '_actions_', title: 'Actions' }]) %}


            {% set list = table.jsonSerialize %}

            <div
                id="flex-objects-list"
                {# FIXME: api needs proper endpoint #}
                data-initial-store="{{
                    {
                        data: list,
                        api: grav.uri.currentRoute().withExtension('json').uri() ~ '',
                        perPage: perPage,
                        fields: tableFields,
                        searchFields: searchFields,
                        sortOrder: [{ field: 'updated_date', direction: 'desc' }],
                        searchPlaceholder: "PLUGIN_ADMIN.RESOURCE_FILTER"|tu,
                        paginationInfo: "PLUGIN_FLEX_OBJECTS.LIST_INFO"|tu,
                        emptyResult: "PLUGIN_FLEX_OBJECTS.EMPTY_RESULT"|tu
                    }|json_encode|e('html_attr')
                }}">
                <svg viewBox="0 0 1060 {{ 31 * (min(perPage, list|count) + 2) }}">
                {% for i in 0..((min(perPage, list|count) + 3) - 1) %}
                    <rect clip-path="url(#clip-path-{{ i }})" x="0" y="0" width="1060" height="{{ 31 * perPage }}" style="fill: url(#linear-gradient-{{ i }})"></rect>
                    <defs>
                        <clipPath id="clip-path-{{ i }}">
                            <rect x="13" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 200 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="533" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 63 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="653" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 78 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="755" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 117 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>
                            <rect x="938" y="{{ 31 * i + 10 }}" rx="6" ry="6" width="{{ 83 * random([0.7, 0.8, 0.9, 1]) }}" height="12"></rect>

                            <rect x="0" y="{{ 31 * i }}" rx="6" ry="6" width="1060" height=".3"></rect>
                        </clipPath>
                        <linearGradient id="linear-gradient-{{ i }}">
                            <stop offset="-0.60016" stop-color="#d9d9d9" stop-opacity="1">
                                <animate attributeName="offset" values="-3; 1" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                            <stop offset="0.39984" stop-color="#ecebeb" stop-opacity="1">
                                <animate attributeName="offset" values="-2; 2" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                            <stop offset="1.39984" stop-color="#d9d9d9" stop-opacity="1">
                                <animate attributeName="offset" values="-1; 3" dur="2s" repeatCount="indefinite"></animate>
                            </stop>
                        </linearGradient>
                    </defs>
                {% endfor %}
                </svg></div>

            {#<table id="data-table" class="tablesorter tablesorter-default">
                <colgroup>
                    {% for key,options in fields %}
                        <col width="{{ options.width ?: ((100-fields_width) / ((fields_count-fields_set) ?: 1))|round(3) }}" />
                    {% endfor %}
                    <col width="8" />
                </colgroup>
                <thead>
                <tr>
                    {% for key,options in fields %}
                        <th>{{ (options.field.label ?? schema.get(options.alias ?? key).label)|tu }}</th>
                    {% endfor %}
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for id,object in collectionz %}
                    <tr>
                        {% for key,options in fields %}
                            {% set field = options.field ?? schema.get(options.alias ?? key) %}
                            <td>
                                {% if options.link == 'edit' %}
                                    {% if object.authorize('read') %}
                                        <a href="{{ base_url ~ flex.adminRoute(object) }}">{{ object.value(key) }}</a>
                                    {% else %}
                                        {{ object.value(key) }}
                                    {% endif %}
                                {% elseif field.type == 'toggle' %}
                                    {% if object.value(key) %}
                                        <span style="display: none;">1</span>
                                        <i class="published fa fa-check-circle"></i>
                                    {% else %}
                                        <span style="display: none;">0</span>
                                        <i class="unpublished fa fa-times-circle"></i>
                                    {% endif %}
                                {% elseif field.type == 'url' %}
                                    <a href="{{ object[key] }}" target="_blank"><i class="fa fa-link"></i> {{ object.value(key) }}</a>
                                {% elseif field.type == 'selectize' %}
                                    {{ object.value(key)|join(',') }}
                                {% elseif field.type == 'datetime' %}
                                    {{ object.value(key)|date('m/d/Y \\a\\t g:i A') }}
                                {% elseif field.type == 'date' %}
                                    {{ object.value(key)|date('m/d/Y') }}
                                {% elseif field.type == 'time' %}
                                    {{ object.value(key)|date('g:i A') }}
                                {% else %}
                                    {{ object.value(key) }}
                                {% endif %}
                            </td>
                        {% endfor %}
                        <td>
                            {% set object_title = title_field ? "'" ~ object[title_field]|join(' ') ~ "'" : 'Item' %}
                            {% if object.authorize('read') %}
                                <a href="{{ base_url ~ flex.adminRoute(object) }}"
                                   title="Edit {{ object_title }}"
                                   class="edit-action"><i class="fa fa-pencil"></i></a>
                            {% endif %}
                            {% if object.authorize('delete') %}
                                <a href="#delete"
                                   class="page-delete delete-action"
                                   title="Delete {{ object_title }}"
                                   data-remodal-target="delete"
                                   data-delete-url="{{ uri.addNonce(base_url ~ flex.adminRoute(object, {task: 'delete'}), 'admin-form', 'admin-nonce') }}"><i class="fa fa-close"></i></a>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

            <div id="pager" class="pager">
                <form>
                    <button class="button first"><i class="fa fa-fw fa-angle-double-left"></i></button>
                    <button class="button prev"><i class="fa fa-fw fa-chevron-left"></i></button>

                    <span class="pagedisplay"></span>

                    <button class="button next"><i class="fa fa-fw fa-chevron-right"></i></button>
                    <button class="button last"><i class="fa fa-fw fa-angle-double-right"></i></button>

                    <select data-grav-selectize class="pagesize">
                        <option selected="selected" value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="all">All</option>
                    </select>
                </form>
            </div>

            <script>
                ((function($) {
                    var list = $('#data-table');

                    list.tablesorter({
                        theme: 'blue',
                        cssChildRow: 'tablesorter-childRow',
                        widgets: ['zebra', 'filter', 'pager'],
                        headers: {
                    {% for key,options in fields %}
                    {% set field = options.field ?? schema.get(options.alias ?? key) %}
                    {% if field.type not in ['toggle', 'text', 'textarea', 'url', 'selectize', 'email'] %}
                    {{ loop.index - 1 }}: { sorter: false, filter: false },
                    {% else %}
                    {% endif %}
                    {% endfor %}
                    {{ fields_count }}: { sorter: false, filter: false },
                },
                    widgetOptions: {
                        pager_output: '{startRow} - {endRow} / {filteredRows} ({totalRows})',
                            pager_removeRows: false,
                            pager_size: 10,
                            filter_childRows: false,
                            filter_cssFilter: 'tablesorter-filter',
                            filter_startsWith: false,
                            filter_ignoreCase: true
                    }
                });

                    list.find('.tablesorter-childRow td').addClass('hidden');

                    $('#pager button').on('click', function(e) { e.preventDefault(); });
                })(jQuery));
            </script>#}

        {% endif %}

        {% include 'flex-objects/pages/modals/remove.html.twig' with { name: target } %}

    {% endblock %}
</div>
{% else %}
    {% do page.modifyHeader('http_response_code', 404) %}
    <div class="error-block">
        <h1>Error 404</h1>
        <div class="padding">
            <p>
                Woops! Looks like this page doesn't exist.
            </p>
        </div>
    </div>
{% endif %}
{% endblock %}
